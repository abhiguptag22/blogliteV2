{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"blog_feed\",\n  data() {\n    return {\n      searchInput: \"\",\n      selectedFile: null,\n      caption: \"\",\n      user_name: \"\",\n      user_id: \"\",\n      profileImage: null,\n      allPosts: null,\n      postImages: null,\n      suggestions: null,\n      noPosts: 1\n    };\n  },\n  computed: {\n    timeDifference: function () {\n      return timestamp => {\n        const currentDate = new Date();\n        const postDate = new Date(timestamp);\n        const difference = currentDate - postDate;\n        const minute = 1000 * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n        const year = day * 365;\n        let result;\n        if (difference >= year) {\n          result = `${Math.floor(difference / year)} years ago`;\n        } else if (difference >= day) {\n          result = `${Math.floor(difference / day)} days ago`;\n        } else if (difference >= hour) {\n          result = `${Math.floor(difference / hour)} hours ago`;\n        } else {\n          result = `${Math.floor(difference / minute)} minutes ago`;\n        }\n        return result;\n      };\n    }\n  },\n  methods: {\n    onFileSelected(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    unliked(likers) {\n      const numbers = likers;\n      if (numbers.includes(this.user_id)) {\n        return 0;\n      }\n      return 1;\n    },\n    onUpload() {\n      console.log(this.selectedFile);\n      const fd = new FormData();\n      fd.append('image', this.selectedFile);\n      fd.append('caption', this.caption);\n      fd.append('user_id', this.user_id);\n      fd.append('user_name', this.user_name);\n      fetch(\"http://localhost:5000/uploadPost\", {\n        method: \"POST\",\n        body: fd,\n        headers: {\n          'x-access-token': localStorage.getItem('token')\n        }\n      });\n    },\n    handleLogOut() {\n      localStorage.removeItem('token');\n      this.$router.push({\n        name: 'login'\n      });\n    },\n    handleExportLink() {\n      this.$router.push({\n        name: 'export'\n      });\n    },\n    handleProfile() {\n      this.$router.push({\n        name: 'profile'\n      });\n    },\n    handleFollow(f_user_id, index) {\n      fetch(`http://localhost:5000/follow/${f_user_id}`, {\n        method: 'POST',\n        headers: {\n          'f_user_id': f_user_id,\n          'user_id': this.user_id,\n          'x-access-token': localStorage.getItem('token')\n        }\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.log(error));\n      this.suggestions[index].follow_unfollow = \"following\";\n      setTimeout(() => {\n        this.suggestions[index].hidden = false;\n      }, 3000);\n    },\n    handleSearch() {\n      this.$router.push({\n        name: 'search',\n        query: {\n          q: this.searchInput\n        }\n      });\n    },\n    handleLike(post_id, f_user_id) {\n      console.log(post_id, f_user_id);\n      fetch(\"http://localhost:5000/handleLike\", {\n        method: \"POST\",\n        headers: {\n          'post_id': post_id,\n          'f_user_id': f_user_id,\n          'user_id': this.user_id\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        fetch(`http://localhost:5000/getAllPosts`, {\n          headers: {\n            'user_id': this.user_id,\n            'x-access-token': localStorage.getItem('token')\n          }\n        }).then(response => response.json()).then(data => {\n          this.allPosts = data;\n          this.noPosts = data.length;\n        }).catch(error => console.log(error));\n      }).catch(error => console.log(error));\n    }\n  },\n  mounted: async function () {\n    const jRequest = await fetch(\"http://localhost:5000/checkval\", {\n      method: 'POST',\n      body: JSON.stringify({\n        auth_token: localStorage.getItem('token')\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset-UTF-8\",\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const jResponse = await jRequest.json();\n    console.log(jResponse);\n    if (!jResponse) {\n      console.log(\"login not successful\");\n      this.$router.push({\n        name: 'login'\n      });\n    } else {\n      this.user_id = jResponse[0];\n      this.user_name = jResponse[1];\n      fetch(`http://localhost:5000/loadProfilePic/${this.user_id}`, {\n        headers: {\n          'user_id': this.user_id,\n          'x-access-token': localStorage.getItem('token')\n        }\n      }).then(response => response.json()).then(data => {\n        this.profileImage = data.image;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    fetch(`http://localhost:5000/getAllPosts`, {\n      headers: {\n        'user_id': this.user_id,\n        'x-access-token': localStorage.getItem('token')\n      }\n    }).then(response => response.json()).then(data => {\n      this.allPosts = data;\n      this.noPosts = data.length;\n    }).catch(error => console.log(error));\n    fetch(`http://localhost:5000/suggestions`, {\n      headers: {\n        'user_id': this.user_id,\n        'x-access-token': localStorage.getItem('token')\n      }\n    }).then(response => response.json()).then(data => {\n      for (let i = 0; i < data.length; i++) {\n        data[i].hidden = true;\n        data[i].follow_unfollow = 'Follow';\n      }\n      this.suggestions = data;\n    }).catch(error => console.log(error));\n  }\n};","map":{"version":3,"mappings":";AAkGA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QAEA;QACA;UACAC;QACA;UACAA;QACA;UACAA;QACA;UACAA;QACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IAEAC;MACA;MACA;QACA;MACA;MACA;IACA;IAEAC;MACAC;MACA;MACAC;MACAA;MACAA;MACAA;MACAC;QACAC;QACAC;QACAC;UACA;QACA;MACA;IACA;IAEAC;MACAC;MACA;QAAA1B;MAAA;IACA;IAEA2B;MACA;QAAA3B;MAAA;IACA;IAEA4B;MACA;QAAA5B;MAAA;IACA;IAEA6B;MACAR;QACAC;QACAE;UACA;UACA;UACA;QACA;MACA,qEACAM;MACA;MACAC;QACA;MACA;IACA;IAEAC;MACA;QAAAhC;QAAAiC;UAAAC;QAAA;MAAA;IACA;IAEAC;MACAhB;MACAE;QAAAC;QAAAE;UAAA;UAAA;UAAA;QAAA;MAAA,GACAY;QACAjB;QACAE;UAAAG;YAAA;YAAA;UAAA;QAAA,GACAY;UACA;UACA;QACA,GACAN;MACA,GACAA;IACA;EAEA;EACAO;IACA;MACAf;MACAC;QACAe;MACA;MACAd;QACA;QACA;MACA;IACA;IACA;IACAL;IACA;MACAA;MACA;QAAAnB;MAAA;IACA,OACA;MACA;MACA;MACAqB;QAAAG;UAAA;UAAA;QAAA;MAAA,GACAY;QACA;MACA,GACAN;QACAX;MACA;IACA;IACAE;MAAAG;QAAA;QAAA;MAAA;IAAA,GACAY;MACA;MACA;IACA,GACAN;IAEAT;MAAAG;QAAA;QAAA;MAAA;IAAA,GACAY;MACA;QACAnC;QACAA;MACA;MACA;IACA,GACA6B;EACA;AACA","names":["name","data","searchInput","selectedFile","caption","user_name","user_id","profileImage","allPosts","postImages","suggestions","noPosts","computed","timeDifference","result","methods","onFileSelected","unliked","onUpload","console","fd","fetch","method","body","headers","handleLogOut","localStorage","handleExportLink","handleProfile","handleFollow","catch","setTimeout","handleSearch","query","q","handleLike","then","mounted","auth_token"],"sourceRoot":"src/components","sources":["Blog_feed.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <b-navbar class=\"top-nav\" type=\"dark\">\r\n        <b-navbar-nav class=\"me-auto mx-5\">\r\n          <b-navbar-brand>Blog Lite</b-navbar-brand>\r\n          <b-nav class=\"mx-5\">\r\n            <div class=\"d-flex\">\r\n              <b-input class=\"mr-sm-2\" placeholder=\"Search\" v-model=\"searchInput\"></b-input>\r\n              <b-button class=\"mx-2 search\" type=\"submit\" @click=\"handleSearch\">Search</b-button>\r\n            </div>\r\n          </b-nav>\r\n        </b-navbar-nav>\r\n        <b-navbar-nav class=\"ms-auto mx-5\">\r\n          <b-nav-item>Home</b-nav-item>\r\n          <b-nav-item @click=\"handleProfile\">Profile</b-nav-item>\r\n          <b-nav-item-dropdown :text=\"user_name\">\r\n            <b-dropdown-item @click=\"handleExportLink\">Export as csv</b-dropdown-item>\r\n            <b-dropdown-item @click=\"handleLogOut\">Log out</b-dropdown-item>\r\n          </b-nav-item-dropdown>\r\n        </b-navbar-nav>\r\n      </b-navbar>\r\n    </div>\r\n    <div class=\"row d-flex mt-3\">\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-3 align-items-center\">\r\n        <div class=\"suggestion-box center shadow-div\">\r\n          <div class=\"sug-head\">\r\n            <h4>Suggestions</h4>\r\n          </div>\r\n          <hr style=\"border-top: 3px solid\">\r\n          <div class=\"all-sugs\">\r\n            <div v-for=\"(suggestion, index) in suggestions\" :key=\"index\">\r\n              <div class=\"person d-flex\" v-if=\"suggestion.hidden\">\r\n                <img :src=\"('data:image/jpg;base64,' + suggestion.image)\" alt=\"Image\" id=\"sug-img\">\r\n                <h6 id=\"sug-h6\"><router-link :to=\"'/profile/' + suggestion.user_id\">{{\r\n                  suggestion.user_name\r\n                }}</router-link>\r\n                </h6>\r\n\r\n                <div class=\"follow ms-auto mx-3\">\r\n                  <input type=\"button\" :value=\"suggestion.follow_unfollow\" id=\"follow-btn\"\r\n                    @click=\"handleFollow(suggestion.user_id, index)\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-5\">\r\n        <div class=\"post-tab shadow-div d-flex\">\r\n          <img class=\"prof-img\" :src=\"('data:image/jpg;base64,' + profileImage)\">\r\n          <input type=\"text\" v-model=\"caption\" placeholder=\"Caption\" class=\"post-input\">\r\n          <div class=\"d-flex\">\r\n            <input type=\"file\" id=\"input-file\" name='image' @change=\"onFileSelected\">\r\n            <input type=\"button\" value=\"Post\" id=\"post-btn\" @click=\"onUpload\">\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"no-posts\" v-if=\"!noPosts\">There are no posts to show</div>\r\n        <div class=\"feed-item shadow-div\" v-for=\"eachPost in allPosts\" :key=\"eachPost.key\">\r\n          <div class=\"feed-item-first d-flex\">\r\n            <img :src=\"('data:image/jpg;base64,' + eachPost.profileImage)\" class=\"feed-prof-img\" alt=\"img\">\r\n            <div class=\"name-time\">\r\n              <h4><router-link :to=\"'/profile/' + eachPost.user_id\">{{ eachPost.user_name }}</router-link></h4>\r\n              <div class=\"d-flex\">\r\n                <img class=\"icon\" src=\"../assets/workwise/img/Time_50px.png\">\r\n                <p class=\"text-muted\" style=\"margin-top: -3px; margin-left: 5px;\">{{\r\n                  timeDifference(eachPost.timestamp)\r\n                }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p class=\"feed-caption\">{{ eachPost.caption }}</p>\r\n          </div>\r\n          <div class=\"feed-img\">\r\n            <img :src=\"('data:image/jpg;base64,' + eachPost.image)\" alt=\"Image\">\r\n          </div>\r\n          <p class=\"feed-caption\">No. of Likes : {{ eachPost.likes }}</p>\r\n          <div style=\"margin-left:20px; margin-right:20px;\">\r\n            <hr>\r\n          </div>\r\n          <div class=\"feed-like ms-auto\" @click=\"handleLike(eachPost.id, eachPost.user_id)\">\r\n            <img v-if=\"unliked(eachPost.likers)\" src=\"../assets/icons/sheart.png\" alt=\"\">\r\n            <img v-else src=\"../assets/icons/wheart.png\" alt=\"\">\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: \"blog_feed\",\r\n  data() {\r\n    return {\r\n      searchInput: \"\",\r\n      selectedFile: null,\r\n      caption: \"\",\r\n      user_name: \"\",\r\n      user_id: \"\",\r\n      profileImage: null,\r\n      allPosts: null,\r\n      postImages: null,\r\n      suggestions: null,\r\n      noPosts: 1\r\n    }\r\n  },\r\n  computed: {\r\n    timeDifference: function () {\r\n      return timestamp => {\r\n        const currentDate = new Date()\r\n        const postDate = new Date(timestamp)\r\n        const difference = currentDate - postDate\r\n\r\n        const minute = 1000 * 60\r\n        const hour = minute * 60\r\n        const day = hour * 24\r\n        const year = day * 365\r\n\r\n        let result;\r\n        if (difference >= year) {\r\n          result = `${Math.floor(difference / year)} years ago`\r\n        } else if (difference >= day) {\r\n          result = `${Math.floor(difference / day)} days ago`\r\n        } else if (difference >= hour) {\r\n          result = `${Math.floor(difference / hour)} hours ago`\r\n        } else {\r\n          result = `${Math.floor(difference / minute)} minutes ago`\r\n        }\r\n        return result\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onFileSelected(event) {\r\n      this.selectedFile = event.target.files[0]\r\n    },\r\n\r\n    unliked(likers) {\r\n      const numbers = likers\r\n      if (numbers.includes(this.user_id)) {\r\n        return 0\r\n      }\r\n      return 1\r\n    },\r\n\r\n    onUpload() {\r\n      console.log(this.selectedFile)\r\n      const fd = new FormData()\r\n      fd.append('image', this.selectedFile)\r\n      fd.append('caption', this.caption)\r\n      fd.append('user_id', this.user_id)\r\n      fd.append('user_name', this.user_name)\r\n      fetch(\"http://localhost:5000/uploadPost\", {\r\n        method: \"POST\",\r\n        body: fd,\r\n        headers: {\r\n          'x-access-token': localStorage.getItem('token')\r\n        }\r\n      })\r\n    },\r\n\r\n    handleLogOut() {\r\n      localStorage.removeItem('token')\r\n      this.$router.push({ name: 'login' })\r\n    },\r\n\r\n    handleExportLink() {\r\n      this.$router.push({name: 'export'})\r\n    },\r\n    \r\n    handleProfile() {\r\n      this.$router.push({ name: 'profile' })\r\n    },\r\n\r\n    handleFollow(f_user_id, index) {\r\n      fetch(`http://localhost:5000/follow/${f_user_id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'f_user_id': f_user_id,\r\n          'user_id': this.user_id,\r\n          'x-access-token': localStorage.getItem('token')\r\n        }\r\n      }).then(response => response.json()).then(data => console.log(data))\r\n        .catch(error => console.log(error))\r\n      this.suggestions[index].follow_unfollow = \"following\"\r\n      setTimeout(() => {\r\n        this.suggestions[index].hidden = false\r\n      }, 3000);\r\n    },\r\n\r\n    handleSearch() {\r\n      this.$router.push({ name: 'search', query: { q: this.searchInput } })\r\n    },\r\n\r\n    handleLike(post_id, f_user_id) {\r\n      console.log(post_id, f_user_id)\r\n      fetch(\"http://localhost:5000/handleLike\", { method: \"POST\", headers: { 'post_id': post_id, 'f_user_id': f_user_id, 'user_id': this.user_id } })\r\n        .then(response => response.json()).then(data => {\r\n          console.log(data)\r\n          fetch(`http://localhost:5000/getAllPosts`, { headers: { 'user_id': this.user_id, 'x-access-token': localStorage.getItem('token') } })\r\n            .then(response => response.json()).then(data => {\r\n              this.allPosts = data\r\n              this.noPosts = data.length\r\n            })\r\n            .catch(error => console.log(error))\r\n        })\r\n        .catch(error => console.log(error))\r\n    },\r\n\r\n  },\r\n  mounted: async function () {\r\n    const jRequest = await fetch(\"http://localhost:5000/checkval\", {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        auth_token: localStorage.getItem('token')\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset-UTF-8\",\r\n        'x-access-token': localStorage.getItem('token')\r\n      }\r\n    })\r\n    const jResponse = await jRequest.json()\r\n    console.log(jResponse)\r\n    if (!jResponse) {\r\n      console.log(\"login not successful\")\r\n      this.$router.push({ name: 'login' })\r\n    }\r\n    else {\r\n      this.user_id = jResponse[0]\r\n      this.user_name = jResponse[1]\r\n      fetch(`http://localhost:5000/loadProfilePic/${this.user_id}`, { headers: { 'user_id': this.user_id, 'x-access-token': localStorage.getItem('token') } })\r\n        .then(response => response.json()).then(data => {\r\n          this.profileImage = data.image\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    }\r\n    fetch(`http://localhost:5000/getAllPosts`, { headers: { 'user_id': this.user_id, 'x-access-token': localStorage.getItem('token') } })\r\n      .then(response => response.json()).then(data => {\r\n        this.allPosts = data\r\n        this.noPosts = data.length\r\n      })\r\n      .catch(error => console.log(error))\r\n\r\n    fetch(`http://localhost:5000/suggestions`, { headers: { 'user_id': this.user_id, 'x-access-token': localStorage.getItem('token') } })\r\n      .then(response => response.json()).then(data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          data[i].hidden = true\r\n          data[i].follow_unfollow = 'Follow'\r\n        }\r\n        this.suggestions = data\r\n      })\r\n      .catch(error => console.log(error))\r\n  }\r\n}\r\n\r\n</script>\r\n<style>\r\n.navbar-expand {\r\n  color: white;\r\n  position: fixed !important;\r\n}\r\n\r\n.navbar-nav .nav-link {\r\n  color: white;\r\n}\r\n\r\n.top-nav {\r\n  background-color: #000039 !important;\r\n  position: fixed I !important;\r\n}\r\n\r\n.search {\r\n  background-color: #000039 !important;\r\n  color: white;\r\n}\r\n\r\n.suggestion-box {\r\n  width: 315.8px;\r\n  height: 375px;\r\n  background-color: white;\r\n  text-align: left;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  margin-top: 60px;\r\n  position: fixed;\r\n  /* margin-right: auto; */\r\n  /* margin-left: 70px; */\r\n}\r\n\r\n.sug-head h4 {\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  display: inline-block;\r\n  color: #000038;\r\n  font-weight: bold;\r\n  text-align: left;\r\n}\r\n\r\n.post-tab {\r\n  background-color: white;\r\n  height: 120px;\r\n  width: 654px;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-top: 60px;\r\n  margin-right: auto;\r\n  border-bottom: 2px solid #000039;\r\n}\r\n\r\n.feed-item {\r\n  background-color: white;\r\n  min-height: 20px;\r\n  width: 654px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.feed-item h4 {\r\n  font-weight: 200;\r\n  color: #000038;\r\n  margin-top: 20px;\r\n  margin-left: 5px;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.feed-item h4 a {\r\n  color: #000038;\r\n  text-decoration: none;\r\n}\r\n\r\n.feed-item h4:hover {\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n.icon {\r\n  height: 17px;\r\n}\r\n\r\n.feed-caption {\r\n  color: #666666;\r\n  margin-top: 17px;\r\n  margin-left: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.feed-img img {\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  margin-bottom: 20px;\r\n  max-width: -webkit-fill-available;\r\n}\r\n\r\n.feed-like img {\r\n  height: 40px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.prof-img {\r\n  height: 53px;\r\n  width: 53px;\r\n  border-radius: 50%;\r\n  margin-left: 20px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.feed-prof-img {\r\n  height: 53px;\r\n  width: 53px;\r\n  border-radius: 50%;\r\n  margin-left: 20px;\r\n  margin-right: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.person {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.person h6 a {\r\n  color: #000038;\r\n  text-decoration: none;\r\n}\r\n\r\n.person h6:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n#sug-img {\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 50%;\r\n  margin-left: 20px;\r\n  margin-right: 10px;\r\n}\r\n\r\n#sug-h6 {\r\n  margin-top: 8px;\r\n}\r\n\r\n.post-input {\r\n  height: 66px;\r\n  margin-right: 10px;\r\n}\r\n\r\n#input-file {\r\n  padding-top: 35px;\r\n}\r\n\r\n#post-btn {\r\n  margin-left: -51px;\r\n  margin-top: 25px;\r\n  width: 30%;\r\n  height: 40px;\r\n  background-color: #000038;\r\n  color: white;\r\n}\r\n\r\n#follow-btn {\r\n  background-color: #000038;\r\n  color: white;\r\n}\r\n\r\n#follow-btn:hover {\r\n  background-color: #1d4c01;\r\n}\r\n\r\n.shadow-div {\r\n  /* border-radius: 15px; */\r\n  box-shadow: 3px 3px 3px 3px #ccc;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}